{"version":3,"file":"static/webpack/static/development/pages/post.js.6ea1c9a1c9598dd9a3a6.hot-update.js","sources":["webpack:///./pages/post.js"],"sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { withRouter } from 'next/router';\nimport { createClient }  from 'contentful';\nimport ReactMarkdown from 'react-markdown';\nimport Error from 'next/error';\nimport Layout from '../components/layout/main';\nimport AOS from 'aos';\nimport { CONTENTFUL_SPACE_ID, CONTENTFUL_ACCESS_TOKEN } from '../defaults/ContentfulKeys';\n\nconst Post = withRouter(({ errorCode, post, router }) => {\n\n  useEffect(() => {\n    AOS.init();\n  }, []);\n\n  if(errorCode) {\n    return <Error statusCode={errorCode} />;\n  }\n\n  return (\n    <Fragment>\n      <Layout>\n        <div className=\"post\"\n              data-aos=\"fade-up\">\n          <div className=\"post__header\">\n            <img\n              className=\"post__image\"\n              src={`https:${post.fields.heroImage.fields.file.url}?w=300&h=300&fit=thumb`} />\n          </div>\n          <div className=\"post__content\">\n            <h1>{post.fields.title}</h1>\n            <ReactMarkdown source={post.fields.body} />\n          </div>\n          <div className=\"post__source\">Fonte: {JSON.stringify(post.fields.source)}</div>\n          <div className=\"post__author\">Sobre o autor: {JSON.stringify(post.fields.author)}</div>\n          <div className=\"post__tags\">{post.fields.tags.join(', ')}</div>\n        </div>\n      </Layout>\n      <style jsx>{`\n\n        h1,\n        h2,\n        h3 {\n          font-family: stolzl, sans-serif;\n          font-weight: 700;\n          font-style: normal;\n        }\n\n        h1 {\n          margin: 0 0 25px 0;\n          font-size: 50px;\n          line-height: 50px;\n          background-image: linear-gradient(to bottom, #4CB8C4, #3CD3AD);\n          color: transparent;\n          -webkit-background-clip: text;\n        }\n\n        .post {\n          padding: 20px;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n        }\n\n        .post__header {\n          margin-left: -575px;\n        }\n\n        .post__header__title {\n          height: 110px;\n          margin-left: 150px;\n          margin-top: 175px;\n          position: absolute;\n          background-color: #ffffff;\n          padding: 15px 0 0 25px;\n          display: flex;\n          width: 525px;\n          align-items: center;\n        }\n\n        .post__image {\n          width: 300px;\n          border-radius: 20px;\n          box-shadow: 2px 2px 20px rgba(0,0,0,.2);\n        }\n\n        .post__content {\n          font-family: stolzl,sans-serif;\n          font-weight: 100;\n          font-size: 16px;\n          line-height: 22px;\n          width: 600px;\n          margin: -130px 0 0 150px;\n          padding: 60px;\n          text-align: justify;\n          background: #fff;\n          box-shadow: 3px 3px 30px rgba(0,0,0,.1);\n          border-radius: 10px;\n        }\n\n        @media screen and (max-width: 900px) {\n\n          .post__header {\n            position: sticky;\n            left: 20px;\n          }\n\n          .post__content {\n            margin: -130px 0 0 0;\n            z-index: 1;\n          }\n\n        }\n\n      `}</style>\n    </Fragment>\n  );\n});\n\nPost.getInitialProps = async ({ query }) => {\n  const { slug } = query;\n\n  const client = createClient({\n    space: CONTENTFUL_SPACE_ID,\n    accessToken: CONTENTFUL_ACCESS_TOKEN\n  });\n\n  const entries = await client.getEntries({\n    content_type: 'blogPost',\n    'fields.slug[in]': slug,\n  });\n\n  return {\n    post: entries.items[0]\n  };\n}\n\nexport default Post;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AADA;AAAA;AAEA;AAAA;AAGA;AAFA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAfA;AAAA;AAiGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAFA;AAHA;AAAA;AASA;AACA;AAFA;AACA;AATA;AAQA;AARA;AAcA;AADA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAiBA;;;;A","sourceRoot":""}